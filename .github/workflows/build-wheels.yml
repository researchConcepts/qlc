name: Build Wheels

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
        exclude:
          # Exclude Windows with Python 3.12 for now (cartopy compatibility)
          - os: windows-latest
            python-version: '3.12'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgeos-dev proj-bin libproj-dev
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install geos proj
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools cython
        pip install numpy pandas matplotlib xarray netCDF4 scipy cartopy tqdm
    
    - name: Build wheel
      run: |
        python setup.py bdist_wheel
    
    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
        path: dist/*.whl

  build-sdist:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools cython
    
    - name: Build source distribution
      run: |
        python setup.py sdist
    
    - name: Upload source distribution
      uses: actions/upload-artifact@v3
      with:
        name: sdist
        path: dist/*.tar.gz

  test-wheel:
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Download wheel artifacts
      uses: actions/download-artifact@v3
      with:
        name: wheel-ubuntu-latest-py3.10
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas matplotlib xarray netCDF4 scipy cartopy tqdm
    
    - name: Test wheel installation
      run: |
        pip install dist/*.whl
        python -c "import qlc; print('QLC imported successfully')"
    
    - name: Test basic functionality
      run: |
        python -c "from qlc.py import version; print(f'QLC version: {version.QLC_VERSION}')"
