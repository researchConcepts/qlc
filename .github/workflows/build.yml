name: Build Cross-Platform Wheels

on:
  push:
    tags:
      - "v*.*.*"  # e.g. v0.3.5
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean up old build artifacts
        run: rm -rf dist/
        shell: bash

      - name: Set up QEMU (for ARM64 build on Linux)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgeos-dev proj-bin libproj-dev

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install geos proj

      - name: Build wheels via cibuildwheel
        uses: pypa/cibuildwheel@v2.16.5
        env:
          # --- Configure wheel builds ---
          # Build wheels for CPython 3.10 and 3.11, skipping musl-based Linux
          CIBW_BUILD: "cp310-* cp311-*"
          CIBW_SKIP: "*-musllinux_*"
          
          # Only build for the modern 64-bit architecture on Linux, skipping obsolete i686.
          CIBW_ARCHS_LINUX: x86_64
          
          # Tell cibuildwheel to install cartopy's system dependencies on linux.
          # We first enable EPEL which provides extra development packages.
          CIBW_BEFORE_ALL_LINUX: "yum install -y epel-release && yum install -y geos-devel proj-devel"
          
          # Use a modern, reliable manylinux image to avoid networking/EOL issues
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
        with:
          # Create wheels in the default dist/ directory
          output-dir: dist

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: qlc-wheels-${{ matrix.os }}
          path: dist/*.whl
